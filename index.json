[
{
	"uri": "https://docs.fpfis.eu/docker-images/php/flavors/",
	"title": "Flavors",
	"tags": [],
	"description": "",
	"content": " Image flavors Base The image contains PHP and Apache, no additional services are running.\nAll subsequent development images are base on this image.\n$ docker pull fpfis/httpd-php:5.6 $ docker pull fpfis/httpd-php:7.1 $ docker pull fpfis/httpd-php:7.2  Full image Based on the base image.\nAdditional components have been added for convenience :\n Java OCI  $ docker pull fpfis/httpd-php-full:5.6 $ docker pull fpfis/httpd-php-full:7.1 $ docker pull fpfis/httpd-php-full:7.2  Development image Based on the full image, various dev services and packages are also included :\n Composer Git, Patch \u0026amp; co Xdebug for debugging Blackfire for profiling  $ docker pull fpfis/httpd-php-dev:5.6 $ docker pull fpfis/httpd-php-dev:7.1 $ docker pull fpfis/httpd-php-dev:7.2  "
},
{
	"uri": "https://docs.fpfis.eu/docker-images/php/versioning/",
	"title": "Versioning",
	"tags": [],
	"description": "",
	"content": " We follow upstream version for tagging.\nTagging rational    tag type build environment     x.x beta push on develop acceptance/playground/testing/development   5.6.36(-1..xx) stable tag from develop selective/edge cases/regression testing   7.1.2(-1..xx) stable tag from develop selective/edge cases/regression testing   production-x.x stable merge from develop or tag production     Alpha: versions are always the latest build of our docker images, they should be used for testing and ensure no issue are found at the infrastructure level before the image hits the production servers. Beta: versions are tags that are considered stable and can be used to target the pre-prod version or older version for regression testing. A suffix is added when a fpfis release is done ( eg: 5.6.36-1, 5.6.36-2, ect \u0026hellip; ) Stable: Is merged every time the last tag is considered stable, and should be used in production.  "
},
{
	"uri": "https://docs.fpfis.eu/docker-images/php/configuration/",
	"title": "Configuration",
	"tags": [],
	"description": "",
	"content": " Runtime docker configuration    env Description Default     APACHE_ACCESS_LOG Location of apache\u0026rsquo;s access log /proc/self/fd/1   APACHE_ERROR_LOG Location of apache\u0026rsquo;s error log /proc/self/fd/2   DAEMON_GROUP Group name to run the daemons with www-data   DAEMON_USER Username to run the daemons with www-data   DOCUMENT_ROOT Document root /var/www/html   SITE_PATH Site URL location (non-dev) /   FPM_MAX_CHILDREN Max number of PHP processes 5   FPM_MIN_CHILDREN Min number of PHP processes 2   HTTP_PORT Port to listen on 8080   PHP_MAX_EXECUTION_TIME PHP max execution time 30   PHP_MAX_INPUT_TIME PHP max input time 30   PHP_MEMORY_LIMIT PHP memory limit 512M   SMTP_SERVER SMTP server to use empty   SMTP_PORT SMTP port to use 25   SMTP_FROM SMTP From to use empty   SMTP_USERNAME Username to use for SMTP auth empty   SMTP_PASSWORD Password to use for SMTP auth empty    With docker-compose Eg, if you have an app with a web folder that should be the document root :\nservices: web: image: fpfis/httpd-php-dev:5.6 environment: - DOCUMENT_ROOT=/app/web volumes: - .:/app  "
},
{
	"uri": "https://docs.fpfis.eu/php-sdks/",
	"title": "PHP SDKs",
	"tags": [],
	"description": "",
	"content": " A curated lists of PHP SDKs maintained by FPFIS :\niTopApi The plugins SDK allows for interactions with iTop CMDB.\ncomposer require ec-europa/itopapi:~1.0  Backtrac PHP client This projects includes both a client library and a phing helper to trigger visual comparison.\ncomposer require ec-europa/backtrac-php-client:~0.1  "
},
{
	"uri": "https://docs.fpfis.eu/docker-images/varnish/",
	"title": "Varnish",
	"tags": [],
	"description": "",
	"content": " Image Image is named fpfis/varnish and are based on Ubuntu.\nSupported version  4.1\n 6  VMOD included The following vmods have been included :\n Varnish extra vmods Drupal 7  Configuration Environment configuration    env Description Default     HTTP_PORT Port to listen on 8086   MAX_MEMORY Maximum memory to use for caching 1G   YAML_CONF YAML file to read backend config /config.yaml    YAML configuration The backend must be defined in a YAML file mounted as a volume.\nThe syntax is as follow :\nSimple configuration varnish: sites: default: nodes: - host: web port: 8080  Load balancer with routing varnish: sites: site1: path: /site1 base64auth: pxosizjpiweqw nodes: - host: web01 port: 8888 - host: web02 port: 8888 site1static: path: /site1/static base64auth: pxosizjpiweqw nodes: - host: web01 port: 8889 - host: web02 port: 8889 site2: path: /site2 base64auth: pxosizjpiweqw nodes: - host: web03 port: 8888 - host: web04 port: 8888 site2static: path: /site2/static base64auth: pxosizjpiweqw nodes: - host: web03 port: 8889 - host: web04 port: 8889  Mouting VCL volume VCL must be mounted in /etc/varnish and a default.vcl should be present. You should also make sure to include /tmp/directors.vcl in your VCL to setup the backends.\nExample Assuming you have a working VCL with default.vcl in your local varnish folder :\ndocker run -p 8086:8086 -ti --rm -e YAML_CONF=/yaml.conf -v $(pwd)/config.yaml:/config.yaml -v $(pwd)/varnish:/etc/varnish fpfis/varnish:4.1    \n"
},
{
	"uri": "https://docs.fpfis.eu/docker-images/",
	"title": "Docker images",
	"tags": [],
	"description": "",
	"content": " All images are available on FPFIS\u0026rsquo;s Docker hub\nA curated lists of docker images maintained by FPFIS\nPHP Docker images docker pull fpfis/httpd-php:7.1  Redis Docker image docker pull fpfis/redis  Varnish Docker image docker pull fpfis/varnish:4.1  "
},
{
	"uri": "https://docs.fpfis.eu/drone/php-sdks/drone-client-sdk/",
	"title": "Drone Client PHP SDK",
	"tags": [],
	"description": "",
	"content": " The client SDK is currently unstested an a work in progress\n Using with composer $ composer require gboddin/php-drone-client  Getting Started Please follow the installation procedure and then run the following:\n\u0026lt;?php require_once(__DIR__ . '/vendor/autoload.php'); // Configure API key authorization: accessToken DroneClient\\Configuration::getDefaultConfiguration()-\u0026gt;setApiKey('access_token', 'YOUR_API_KEY'); // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed // DroneClient\\Configuration::getDefaultConfiguration()-\u0026gt;setApiKeyPrefix('access_token', 'Bearer'); $api_instance = new DroneClient\\Api\\BuildsApi(); $owner = \u0026quot;owner_example\u0026quot;; // string | owner of the repository $name = \u0026quot;name_example\u0026quot;; // string | name of the repository try { $result = $api_instance-\u0026gt;reposOwnerNameBuildsGet($owner, $name); print_r($result); } catch (Exception $e) { echo 'Exception when calling BuildsApi-\u0026gt;reposOwnerNameBuildsGet: ', $e-\u0026gt;getMessage(), PHP_EOL; } ?\u0026gt;  "
},
{
	"uri": "https://docs.fpfis.eu/drone/php-sdks/drone-plugin-sdk/",
	"title": "Drone Plugin PHP SDK",
	"tags": [],
	"description": "",
	"content": " Allows for creating PHP based plugins.\nUsing with composer $ composer require phpdrone/drone-plugin-sdk:~0.1  Example \u0026lt;?php require __DIR__.\u0026quot;/vendor/autoload.php\u0026quot;; // Get the build : $build = new \\DronePluginSdk\\Build(); // Get some settings : var_dump($build-\u0026gt;getPluginParameter('my_parameter'));  Full example See the example included on Github\nAPI documentation See the full API documentation\n"
},
{
	"uri": "https://docs.fpfis.eu/docker-images/varnish-ne/",
	"title": "NextEuropa Varnish",
	"tags": [],
	"description": "",
	"content": " Image The image is named fpfis/varnish-ne:4.1.\nIt is based on fpfis/varnish and as such inherits all configuration options from the fpfis/varnish image.\nThe NextEuropa VCL is included and includes the purging mechanism.\nSupported version  4.1\n  Running docker run -p 8086:8086 -ti --rm -e YAML_CONF=/yaml.conf -v $(pwd)/config.yaml:/config.yaml fpfis/varnish-ne:4.1   \n"
},
{
	"uri": "https://docs.fpfis.eu/docker-images/redis/",
	"title": "Redis",
	"tags": [],
	"description": "",
	"content": " Image We recommend using the latest Redis 4.0 image\nConfiguration See the Docker Hub\u0026rsquo;s page.\nPort Redis is running on port 6379 by default.\nExample docker run -p 6379:6379 -ti --rm redis  "
},
{
	"uri": "https://docs.fpfis.eu/php-sdks/backtrac-php-client/",
	"title": "Backtrac PHP client",
	"tags": [],
	"description": "",
	"content": " This projects includes both a client library and a phing helper to trigger visual comparison.\nUsage API Documentation See the generated documentation\nInstallation composer require ec-europa/backtrac-php-client:~0.1  Examples Usage as library \u0026lt;?php require_once __DIR__.'/../vendor/autoload.php'; $client = new \\EC\\Utils\\Backtrac\\Client( 1, 'aaaaaaaaaaaaaaa' ); /** * Create a website object */ $website = new \\EC\\Utils\\Backtrac\\Website('test-site','http://ci-test.com'); /** * Set the new url for dev : */ $client-\u0026gt;setDevWebsite($website); /** * Compare prod a dev : */ $diffId = $client-\u0026gt;compareEnvironments( \\EC\\Utils\\Backtrac\\Client::COMPARE_PROD_DEV )-\u0026gt;result-\u0026gt;nid; /** * Wait for the end of the diff and display result : */ var_dump( $client-\u0026gt;waitForResults($diffId) ); /** * Custom compare : */ var_dump( $client-\u0026gt;customCompare( 'my_diff', new \\EC\\Utils\\Backtrac\\Website('site_1','http://xxxx.yyy/zzz'), new \\EC\\Utils\\Backtrac\\Website('site_2', 'http://xxx.yyy/zzzzw') ) );  Usage as Phing task \u0026lt;?xml version=\u0026quot;1.0\u0026quot; ?\u0026gt; \u0026lt;project default=\u0026quot;backtrac-compare-self\u0026quot; name=\u0026quot;test\u0026quot; basedir=\u0026quot;.\u0026quot;\u0026gt; \u0026lt;!-- Import the phing tasks into your project. --\u0026gt; \u0026lt;import file=\u0026quot;${project.basedir}/vendor/ec-europa/backtrac-php-client/phing/import.xml\u0026quot; /\u0026gt; \u0026lt;!-- Example target to update a website url for an environment. --\u0026gt; \u0026lt;target name=\u0026quot;backtrac-update-url\u0026quot;\u0026gt; \u0026lt;backtrac-set-url secure=\u0026quot;true\u0026quot; environment=\u0026quot;development\u0026quot; url=\u0026quot;http://xyz.com\u0026quot; project_id=\u0026quot;12\u0026quot; auth_token=\u0026quot;xxxxxxxx\u0026quot; /\u0026gt; \u0026lt;/target\u0026gt; \u0026lt;!-- Example target for comparing different environments: prod and dev. --\u0026gt; \u0026lt;target name=\u0026quot;backtrac-compare-prod-dev\u0026quot;\u0026gt; \u0026lt;backtrac-compare secure=\u0026quot;true\u0026quot; compare_mode=\u0026quot;compare_prod_dev\u0026quot; project_id=\u0026quot;12\u0026quot; check_results=\u0026quot;true\u0026quot; auth_token=\u0026quot;xxxxxxxx\u0026quot; /\u0026gt; \u0026lt;/target\u0026gt; \u0026lt;!-- Example target to take single snapshot: before deployment or build. --\u0026gt; \u0026lt;target name=\u0026quot;backtrac-single-snapshot\u0026quot;\u0026gt; \u0026lt;backtrac-compare secure=\u0026quot;true\u0026quot; compare_mode=\u0026quot;snapshot\u0026quot; environment=\u0026quot;production\u0026quot; project_id=\u0026quot;12\u0026quot; check_results=\u0026quot;false\u0026quot; auth_token=\u0026quot;xxxxxxxx\u0026quot; /\u0026gt; \u0026lt;/target\u0026gt; \u0026lt;!-- Example target for comparing environment to latest snapshot: after deployment or build. --\u0026gt; \u0026lt;target name=\u0026quot;backtrac-compare-self\u0026quot;\u0026gt; \u0026lt;backtrac-compare secure=\u0026quot;true\u0026quot; compare_mode=\u0026quot;compare_itself\u0026quot; environment=\u0026quot;production\u0026quot; project_id=\u0026quot;12\u0026quot; check_results=\u0026quot;false\u0026quot; auth_token=\u0026quot;xxxxxxxx\u0026quot; /\u0026gt; \u0026lt;/target\u0026gt; \u0026lt;/project\u0026gt;  \n"
},
{
	"uri": "https://docs.fpfis.eu/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/tags/composer/",
	"title": "Composer",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/drone/drone-plugins/composer-sa-checker/",
	"title": "Composer SA Checker",
	"tags": ["composer", "security"],
	"description": "",
	"content": " This plugin connects to Sensiolab Security Advisories, to check if your composer.lock contains any reference to vulnerable components.\nUsage pipeline: test-composer-deps: image: phpdrone/composer-sa-checker # lock_file: composer.lock  Result Security Report =============== No known* vulnerabilities detected. * Disclaimer: This checker can only detect vulnerabilities that are referenced in the SensioLabs security advisories database.  "
},
{
	"uri": "https://docs.fpfis.eu/tags/documentation/",
	"title": "Documentation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/drone/",
	"title": "Drone documentation",
	"tags": [],
	"description": "",
	"content": " Introduction This section aims a providing unified resources and plugins towards usage of Drone for PHP continuous integration, delivery and deployment.\nSDKs Two SDKs are currently maintained, one for client and one for plugins.\nPlugins We are providing multiple dedicated Drone plugins, both aimed toward PHP or written in PHP.\n"
},
{
	"uri": "https://docs.fpfis.eu/drone/drone-plugins/",
	"title": "Drone plugins",
	"tags": [],
	"description": "",
	"content": " Composer SA Checker Checks your composer.lock file for known security advisories with Sensiolab\u0026rsquo;s SA checker.\npipeline: composer-sa-check: image: phpdrone/composer-sa-checker # lock_file: composer.lock  PHAR Composer Creates a standalone PHAR file from a composer project.\npipeline: build-phar: image: phpdrone/phar-composer output: myapp.phar  Packer Process the packer.json file for creating infrastructure artifacts.\npipeline: run-packer: image: fpfis/packer  phpDocumentator Generates documentation from phpDoc.\npipeline: build-phar: image: fpfis/phpdoc  "
},
{
	"uri": "https://docs.fpfis.eu/",
	"title": "FPFIS documentation",
	"tags": [],
	"description": "",
	"content": " Introduction This space is a placeholder for all documentation about FPFIS\u0026rsquo;s OpenSource projects.\nPHP SDKs Multiple PHP SDKs are provided for various clients.\nDocker images Docker images are also provided for other tasks, eg, an nginx web server, a Composer Docker image\n"
},
{
	"uri": "https://docs.fpfis.eu/drone/drone-plugins/phar-composer/",
	"title": "PHAR Composer",
	"tags": ["composer", "phar"],
	"description": "",
	"content": " This plugins allows for creating a standalone PHAR file from a composer project.\nOperation The plugin will :\n Move away your current vendor, .git and .drone.yml file Do a composer install --no-dev to get a minimal build Build a PHAR file Restore your vendor, .git and .drone.yml file  Example pipeline: build-phar: image: phpdrone/phar-composer output: ghcli.phar  Result Backing up vendor directory ... Moving away non-dist material ... Installing mininal components ... Loading composer repositories with package information Installing dependencies from lock file Package operations: 0 installs, 0 updates, 10 removals - Removing squizlabs/php_codesniffer (3.1.1) - Removing clue/phar-composer (v1.0.0) - Removing herrera-io/box (1.6.1) - Removing phine/path (1.1.0) - Removing phine/exception (1.0.0) - Removing tedivm/jshrink (v1.2.0) - Removing knplabs/packagist-api (v1.5.0) - Removing doctrine/inflector (v1.2.0) - Removing symfony/finder (v2.8.28) - Removing symfony/process (v2.8.28) Generating autoload files Building PHAR file ... [1/1] Creating phar ghcli.phar - Adding main package Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/\u0026quot; - Adding composer base files - Adding dependency \u0026quot;clue/stream-filter\u0026quot; from \u0026quot;vendor/clue/stream-filter/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/clue/stream-filter/\u0026quot; - Adding dependency \u0026quot;guzzlehttp/guzzle\u0026quot; from \u0026quot;vendor/guzzlehttp/guzzle/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/guzzlehttp/guzzle/\u0026quot; - Adding dependency \u0026quot;guzzlehttp/promises\u0026quot; from \u0026quot;vendor/guzzlehttp/promises/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/guzzlehttp/promises/\u0026quot; - Adding dependency \u0026quot;guzzlehttp/psr7\u0026quot; from \u0026quot;vendor/guzzlehttp/psr7/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/guzzlehttp/psr7/\u0026quot; - Adding dependency \u0026quot;knplabs/github-api\u0026quot; from \u0026quot;vendor/knplabs/github-api/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/knplabs/github-api/\u0026quot; - Adding dependency \u0026quot;php-http/cache-plugin\u0026quot; from \u0026quot;vendor/php-http/cache-plugin/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/cache-plugin/\u0026quot; - Adding dependency \u0026quot;php-http/client-common\u0026quot; from \u0026quot;vendor/php-http/client-common/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/client-common/\u0026quot; - Adding dependency \u0026quot;php-http/discovery\u0026quot; from \u0026quot;vendor/php-http/discovery/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/discovery/\u0026quot; - Adding dependency \u0026quot;php-http/guzzle6-adapter\u0026quot; from \u0026quot;vendor/php-http/guzzle6-adapter/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/guzzle6-adapter/\u0026quot; - Adding dependency \u0026quot;php-http/httplug\u0026quot; from \u0026quot;vendor/php-http/httplug/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/httplug/\u0026quot; - Adding dependency \u0026quot;php-http/message\u0026quot; from \u0026quot;vendor/php-http/message/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/message/\u0026quot; - Adding dependency \u0026quot;php-http/message-factory\u0026quot; from \u0026quot;vendor/php-http/message-factory/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/message-factory/\u0026quot; - Adding dependency \u0026quot;php-http/promise\u0026quot; from \u0026quot;vendor/php-http/promise/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/promise/\u0026quot; - Adding dependency \u0026quot;psr/cache\u0026quot; from \u0026quot;vendor/psr/cache/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/psr/cache/\u0026quot; - Adding dependency \u0026quot;psr/http-message\u0026quot; from \u0026quot;vendor/psr/http-message/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/psr/http-message/\u0026quot; - Adding dependency \u0026quot;psr/log\u0026quot; from \u0026quot;vendor/psr/log/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/psr/log/\u0026quot; - Adding dependency \u0026quot;symfony/console\u0026quot; from \u0026quot;vendor/symfony/console/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/symfony/console/\u0026quot; - Adding dependency \u0026quot;symfony/debug\u0026quot; from \u0026quot;vendor/symfony/debug/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/symfony/debug/\u0026quot; - Adding dependency \u0026quot;symfony/options-resolver\u0026quot; from \u0026quot;vendor/symfony/options-resolver/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/symfony/options-resolver/\u0026quot; - Adding dependency \u0026quot;symfony/polyfill-mbstring\u0026quot; from \u0026quot;vendor/symfony/polyfill-mbstring/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/symfony/polyfill-mbstring/\u0026quot; - Setting main/stub Using referenced shebang \u0026quot;#!/usr/bin/env php\u0026quot; Using referenced chmod 0755 Applying chmod 0755 OK - Creating ghcli.phar (2537.2 KiB) completed after 33.4s Restoring state ...  Limitation You should clean your workspace before building, at the risk of finding non-dist material in the final PHAR file.\nCredits The plugin is based around PHAR-Composer by Clue.\n"
},
{
	"uri": "https://docs.fpfis.eu/docker-images/php/",
	"title": "PHP",
	"tags": [],
	"description": "",
	"content": " Introduction The FPFIS Docker images are based on the latest Ubuntu LTS with the PHP packages from Ondrej\u0026rsquo;s PPA.\nThree version are currently supported : 5.6, 7.1 and 7.2.\nFor more informations, consult the following topics :\n Flavors   Versioning   Configuration   "
},
{
	"uri": "https://docs.fpfis.eu/drone/php-sdks/",
	"title": "PHP SDKs",
	"tags": [],
	"description": "",
	"content": " There are 2 SDKs availalbe to interact with Drone :\nPlugin SDK The plugins SDK allows for easy creation of PHP based plugins.\n$build = new \\DronePluginSdk\\Build();  Client SDK The client SDK allows for interactions with Drone server.\nThe client SDK is currently unstested an a work in progress\n $api_instance = new DroneClient\\Api\\BuildsApi();  "
},
{
	"uri": "https://docs.fpfis.eu/drone/drone-plugins/packer/",
	"title": "Packer",
	"tags": [],
	"description": "",
	"content": " Description Packer is a tool by Hashicorp to automatically build machine images.\nIt supports Docker, Virtualbox, AWS EC2 and many more.\nImage Image is named fpfis/packer and based on Alpine.\nConfiguration No configuration is available for this image.\nExamples From CLI docker run -v $(pwd):$(pwd) -w $(pwd) -ti --rm fpfis/packer  From Drone pipeline: run-packer: image: fpfis/packer   \n"
},
{
	"uri": "https://docs.fpfis.eu/tags/phar/",
	"title": "Phar",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/tags/security/",
	"title": "Security",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/drone/tutorials/",
	"title": "Tutorials",
	"tags": [],
	"description": "",
	"content": "Coming\n"
},
{
	"uri": "https://docs.fpfis.eu/php-sdks/itopapi/",
	"title": "iTopApi",
	"tags": [],
	"description": "",
	"content": " iTopApi PHP is an helper class to use and query the iTop API from your PHP scripts.\nUsage API documentation See the generated documentation.\nInstallation composer require ec-europa/itopapi  Examples Getting data require 'vendor/autoload.php'; $iTopAPI = new \\iTopApi\\ITopClient( 'http://localhost/itop', 'itopUser', 'iTopPassword' ); //disable SSL checks ? //$iTopAPI-\u0026gt;setCertificateCheck(false); $query = sprintf(\u0026quot;SELECT Servers WHERE environment = '%s'\u0026quot;,'development'); $serversRequest = $iTopAPI-\u0026gt;coreGet(\u0026quot;Servers\u0026quot;,$query); $servers = $serverRequest['objects'];  Creating data require 'vendor/autoload.php'; $iTopAPI = new \\iTopApi\\ITopClient( 'http://localhost/itop', 'itopUser', 'iTopPassword' ); //disable SSL checks ? //$iTopAPI-\u0026gt;setCertificateCheck(false); $request = $iTopAPI-\u0026gt;coreCreate(\u0026quot;Servers\u0026quot;,array( 'hostname' =\u0026gt; 'localhost', 'memory' =\u0026gt; 2048, 'cpu' =\u0026gt; 4, 'location' =\u0026gt; 'dc1' ));  Updating data require 'vendor/autoload.php'; $iTopAPI = new \\iTopApi\\ITopClient( 'http://localhost/itop', 'itopUser', 'iTopPassword' ); //disable SSL checks ? //$iTopAPI-\u0026gt;setCertificateCheck(false); $request = $iTopAPI-\u0026gt;coreUpdate(\u0026quot;Servers\u0026quot;,array( 'hostname' =\u0026gt; 'localhost' ),array( 'memory' =\u0026gt; 1024 ));  Using object oriented require 'vendor/autoload.php'; $iTopAPI = new \\iTopApi\\ITopClient( 'http://localhost/itop', 'itopUser', 'iTopPassword' ); //disable SSL checks ? //$iTopAPI-\u0026gt;setCertificateCheck(false); /** * Query and iterate */ $servers = $iTopAPI-\u0026gt;getObjects(\u0026quot;Server\u0026quot;, array( 'name' =\u0026gt; 'server001' ) ); foreach($servers as $server) { echo $server-\u0026gt;name.' is '.$server-\u0026gt;status_friendlyname; $server-\u0026gt;name = 'server001-eu'; $server-\u0026gt;save(); } /** * Deletes a new server : */ if($server-\u0026gt;status_friendlyname == 'decommissioning') $server-\u0026gt;delete(); /** * Creates a new server : */ $server = $iTopClient-\u0026gt;getNewObject('Server'); $server-\u0026gt;name = 'server002'; $server-\u0026gt;status_friendlyname = 'deployed'; $server-\u0026gt;save();  \n"
},
{
	"uri": "https://docs.fpfis.eu/drone/drone-plugins/phpdoc/",
	"title": "phpDoc",
	"tags": ["composer", "documentation"],
	"description": "",
	"content": " This plugins allows for generating phpDocumentator site based on phpdoc.xml\nExample pipeline: build-doc: image: phpdrone/phpdoc:2.8  Result Collecting files .. OK Initializing parser .. OK Parsing files Parsing /drone/src/github.com/phpdrone/drone-plugin-sdk/src/Repo.php No summary was found for this file No summary for method getOwner() No summary for method getName() No summary for method getLink() No summary for method getDefaultBranch() No summary for method isPrivate() No summary for method isTrusted() Parsing /drone/src/github.com/phpdrone/drone-plugin-sdk/src/Commit.php No summary was found for this file No summary for method getBranch() No summary for method getTag() No summary for method getSha() No summary for method getMessage() No summary for method getAuthorName() No summary for method getAuthorEmail() No summary for method getRef() Parsing /drone/src/github.com/phpdrone/drone-plugin-sdk/src/Build.php Warning: count(): Parameter must be an array or an object that implements Countable in /root/.composer/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Plugin/Core/Descriptor/Validator/Constraints/Functions/IsArgumentInDocBlockValidator.php on line 33 Warning: count(): Parameter must be an array or an object that implements Countable in /root/.composer/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Plugin/Core/Descriptor/Validator/Constraints/Functions/IsArgumentInDocBlockValidator.php on line 33 Warning: count(): Parameter must be an array or an object that implements Countable in /root/.composer/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Plugin/Core/Descriptor/Validator/Constraints/Functions/IsArgumentInDocBlockValidator.php on line 33 Warning: count(): Parameter must be an array or an object that implements Countable in /root/.composer/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Plugin/Core/Descriptor/Validator/Constraints/Functions/IsArgumentInDocBlockValidator.php on line 33 No summary was found for this file Storing cache in \u0026quot;/drone/src/github.com/phpdrone/drone-plugin-sdk/doc\u0026quot; .. OK Load cache .. 0.008s Preparing template \u0026quot;clean\u0026quot; .. 0.017s Preparing 17 transformations .. 0.000s Build \u0026quot;elements\u0026quot; index .. 0.000s Replace textual FQCNs with object aliases .. 0.002s Resolve @link and @see tags in descriptions .. 0.001s Enriches inline example tags with their sources .. 0.000s Build \u0026quot;packages\u0026quot; index .. 0.002s Build \u0026quot;namespaces\u0026quot; index and add namespaces to \u0026quot;elements\u0026quot; .. 0.000s Collect all markers embedded in tags .. 0.000s Transform analyzed project into artifacts .. Applying 17 transformations Initialize writer \u0026quot;phpDocumentor\\Plugin\\Core\\Transformer\\Writer\\FileIo\u0026quot; Initialize writer \u0026quot;phpDocumentor\\Plugin\\Twig\\Writer\\Twig\u0026quot; Initialize writer \u0026quot;phpDocumentor\\Plugin\\Graphs\\Writer\\Graph\u0026quot; Execute transformation using writer \u0026quot;FileIo\u0026quot; Execute transformation using writer \u0026quot;FileIo\u0026quot; Execute transformation using writer \u0026quot;FileIo\u0026quot; Execute transformation using writer \u0026quot;FileIo\u0026quot; Execute transformation using writer \u0026quot;FileIo\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;Graph\u0026quot; 0.633s Analyze results and write report to log .. 0.001s  Credits The plugin is based around phpDocumentator.\n"
}]