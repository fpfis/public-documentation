[
{
	"uri": "https://docs.fpfis.eu/docker-images/php/flavors/",
	"title": "Flavors",
	"tags": [],
	"description": "",
	"content": " Image flavors Base The image contains PHP and Apache, no additional services are running.\nAll subsequent development images are base on this image.\n$ docker pull fpfis/php56 $ docker pull fpfis/php71  Development image The image contains PHP and Apache. Various dev services and packages are also included :\n Shellinabox for accessing the container\u0026rsquo;s shell while running Phpmyadmin for accessing MySQL databases Mailhog for receiving mock emails Xdebug for debugging Blackfire for profiling  $ docker pull fpfis/php56-dev $ docker pull fpfis/php71-dev  Development full image The image contains everything fpfis/phpXX-dev contains and adds the following :\n Ruby Compass Sass  $ docker pull fpfis/php56-dev-full $ docker pull fpfis/php71-dev-full  "
},
{
	"uri": "https://docs.fpfis.eu/docker-images/php/configuration/",
	"title": "Configuration",
	"tags": [],
	"description": "",
	"content": " Environment variables Use the following environment variable to configure the image :\nDOCUMENT_ROOT Path to document root ( default /var/www/html )\nXDEBUG Enable/Disable Xdebug ( default on )\nAPACHE_EXTRA_CONF Extra single line to add to Apache configuration, for options that don\u0026rsquo;t work on .htaccess (Example: Alias)\nAPACHE_EXTRA_CONF_DIR Extra path with .conf files to load onto Apache.\nWith docker-compose Eg, if you have an app with a web folder that should be the document root :\nservices: web: image: fpfis/php56-dev:latest environment: - DOCUMENT_ROOT=/app/web volumes: - .:/app  About ${DOCUMENT_ROOT} : The image will first try to create the directory using the parent\u0026rsquo;s permissions if it\u0026rsquo;s missing.\n Default values    Variable Default Value     XDEBUG ON   APACHE_EXTRA_CONF empty   APACHE_EXTRA_CONF_DIR conf.d    "
},
{
	"uri": "https://docs.fpfis.eu/php-sdks/",
	"title": "PHP SDKs",
	"tags": [],
	"description": "",
	"content": " A curated lists of PHP SDKs maintained by FPFIS :\niTopApi The plugins SDK allows for interactions with iTop CMDB.\ncomposer require ec-europa/itopapi:~1.0  Backtrac PHP client This projects includes both a client library and a phing helper to trigger visual comparison.\ncomposer require ec-europa/backtrac-php-client:~0.1  "
},
{
	"uri": "https://docs.fpfis.eu/docker-images/",
	"title": "Docker images",
	"tags": [],
	"description": "",
	"content": " The current FPFIS Docker images are NOT production ready and are meant for development and testing only !!!\n All images are available on FPFIS\u0026rsquo;s Docker hub\nA curated lists of docker images maintained by FPFIS\nPHP Docker images docker pull fpfis/php71-dev  Redis Docker image docker pull fpfis/redis  Varnish Docker image docker pull fpfis/varnish  "
},
{
	"uri": "https://docs.fpfis.eu/drone/php-sdks/drone-client-sdk/",
	"title": "Drone Client PHP SDK",
	"tags": [],
	"description": "",
	"content": " The client SDK is currently unstested an a work in progress\n Using with composer $ composer require gboddin/php-drone-client  Getting Started Please follow the installation procedure and then run the following:\n\u0026lt;?php require_once(__DIR__ . '/vendor/autoload.php'); // Configure API key authorization: accessToken DroneClient\\Configuration::getDefaultConfiguration()-\u0026gt;setApiKey('access_token', 'YOUR_API_KEY'); // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed // DroneClient\\Configuration::getDefaultConfiguration()-\u0026gt;setApiKeyPrefix('access_token', 'Bearer'); $api_instance = new DroneClient\\Api\\BuildsApi(); $owner = \u0026quot;owner_example\u0026quot;; // string | owner of the repository $name = \u0026quot;name_example\u0026quot;; // string | name of the repository try { $result = $api_instance-\u0026gt;reposOwnerNameBuildsGet($owner, $name); print_r($result); } catch (Exception $e) { echo 'Exception when calling BuildsApi-\u0026gt;reposOwnerNameBuildsGet: ', $e-\u0026gt;getMessage(), PHP_EOL; } ?\u0026gt;  "
},
{
	"uri": "https://docs.fpfis.eu/drone/php-sdks/drone-plugin-sdk/",
	"title": "Drone Plugin PHP SDK",
	"tags": [],
	"description": "",
	"content": " Allows for creating PHP based plugins.\nUsing with composer $ composer require phpdrone/drone-plugin-sdk:~0.1  Example \u0026lt;?php require __DIR__.\u0026quot;/vendor/autoload.php\u0026quot;; // Get the build : $build = new \\DronePluginSdk\\Build(); // Get some settings : var_dump($build-\u0026gt;getPluginParameter('my_parameter'));  Full example See the example included on Github\nAPI documentation See the full API documentation\n"
},
{
	"uri": "https://docs.fpfis.eu/php-sdks/backtrac-php-client/",
	"title": "Backtrac PHP client",
	"tags": [],
	"description": "",
	"content": " This projects includes both a client library and a phing helper to trigger visual comparison.\nUsage API Documentation See the generated documentation\nInstallation composer require ec-europa/backtrac-php-client:~0.1  Examples Usage as library \u0026lt;?php require_once __DIR__.'/../vendor/autoload.php'; $client = new \\EC\\Utils\\Backtrac\\Client( 1, 'aaaaaaaaaaaaaaa' ); /** * Create a website object */ $website = new \\EC\\Utils\\Backtrac\\Website('test-site','http://ci-test.com'); /** * Set the new url for dev : */ $client-\u0026gt;setDevWebsite($website); /** * Compare prod a dev : */ $diffId = $client-\u0026gt;compareEnvironments( \\EC\\Utils\\Backtrac\\Client::COMPARE_PROD_DEV )-\u0026gt;result-\u0026gt;nid; /** * Wait for the end of the diff and display result : */ var_dump( $client-\u0026gt;waitForResults($diffId) ); /** * Custom compare : */ var_dump( $client-\u0026gt;customCompare( 'my_diff', new \\EC\\Utils\\Backtrac\\Website('site_1','http://xxxx.yyy/zzz'), new \\EC\\Utils\\Backtrac\\Website('site_2', 'http://xxx.yyy/zzzzw') ) );  Usage as Phing task \u0026lt;?xml version=\u0026quot;1.0\u0026quot; ?\u0026gt; \u0026lt;project default=\u0026quot;backtrac-compare-self\u0026quot; name=\u0026quot;test\u0026quot; basedir=\u0026quot;.\u0026quot;\u0026gt; \u0026lt;!-- Import the phing tasks into your project. --\u0026gt; \u0026lt;import file=\u0026quot;${project.basedir}/vendor/ec-europa/backtrac-php-client/phing/import.xml\u0026quot; /\u0026gt; \u0026lt;!-- Example target to update a website url for an environment. --\u0026gt; \u0026lt;target name=\u0026quot;backtrac-update-url\u0026quot;\u0026gt; \u0026lt;backtrac-set-url secure=\u0026quot;true\u0026quot; environment=\u0026quot;development\u0026quot; url=\u0026quot;http://xyz.com\u0026quot; project_id=\u0026quot;12\u0026quot; auth_token=\u0026quot;xxxxxxxx\u0026quot; /\u0026gt; \u0026lt;/target\u0026gt; \u0026lt;!-- Example target for comparing different environments: prod and dev. --\u0026gt; \u0026lt;target name=\u0026quot;backtrac-compare-prod-dev\u0026quot;\u0026gt; \u0026lt;backtrac-compare secure=\u0026quot;true\u0026quot; compare_mode=\u0026quot;compare_prod_dev\u0026quot; project_id=\u0026quot;12\u0026quot; check_results=\u0026quot;true\u0026quot; auth_token=\u0026quot;xxxxxxxx\u0026quot; /\u0026gt; \u0026lt;/target\u0026gt; \u0026lt;!-- Example target to take single snapshot: before deployment or build. --\u0026gt; \u0026lt;target name=\u0026quot;backtrac-single-snapshot\u0026quot;\u0026gt; \u0026lt;backtrac-compare secure=\u0026quot;true\u0026quot; compare_mode=\u0026quot;snapshot\u0026quot; environment=\u0026quot;production\u0026quot; project_id=\u0026quot;12\u0026quot; check_results=\u0026quot;false\u0026quot; auth_token=\u0026quot;xxxxxxxx\u0026quot; /\u0026gt; \u0026lt;/target\u0026gt; \u0026lt;!-- Example target for comparing environment to latest snapshot: after deployment or build. --\u0026gt; \u0026lt;target name=\u0026quot;backtrac-compare-self\u0026quot;\u0026gt; \u0026lt;backtrac-compare secure=\u0026quot;true\u0026quot; compare_mode=\u0026quot;compare_itself\u0026quot; environment=\u0026quot;production\u0026quot; project_id=\u0026quot;12\u0026quot; check_results=\u0026quot;false\u0026quot; auth_token=\u0026quot;xxxxxxxx\u0026quot; /\u0026gt; \u0026lt;/target\u0026gt; \u0026lt;/project\u0026gt;  \n"
},
{
	"uri": "https://docs.fpfis.eu/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/tags/composer/",
	"title": "Composer",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/drone/drone-plugins/composer-sa-checker/",
	"title": "Composer SA Checker",
	"tags": ["composer", "security"],
	"description": "",
	"content": " This plugin connects to Sensiolab Security Advisories, to check if your composer.lock contains any reference to vulnerable components.\nUsage pipeline: test-composer-deps: image: phpdrone/composer-sa-checker # lock_file: composer.lock  Result Security Report =============== No known* vulnerabilities detected. * Disclaimer: This checker can only detect vulnerabilities that are referenced in the SensioLabs security advisories database.  "
},
{
	"uri": "https://docs.fpfis.eu/tags/documentation/",
	"title": "Documentation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/drone/",
	"title": "Drone documentation",
	"tags": [],
	"description": "",
	"content": " Introduction The PhpDrone organisation aims a providing unified resources and plugins towards usage of Drone for PHP continuous integration, delivery and deployment.\nSDKs Two SDKs are currently maintained, one for client and one for plugins.\nPlugins We are providing multiple dedicated Drone plugins, both aimed toward PHP or written in PHP.\n"
},
{
	"uri": "https://docs.fpfis.eu/drone/drone-plugins/",
	"title": "Drone plugins",
	"tags": [],
	"description": "",
	"content": " Composer SA Checker Checks your composer.lock file for known security advisories with Sensiolab\u0026rsquo;s SA checker.\npipeline: composer-sa-check: image: phpdrone/composer-sa-checker # lock_file: composer.lock  PHAR Composer Creates a standalone PHAR file from a composer project.\npipeline: build-phar: image: phpdrone/phar-composer output: myapp.phar  phpDocumentator Generates documentation from phpDoc.\npipeline: build-phar: image: fpfis/phpdoc  Packer Process the packer.json file for creating infrastructure artifacts.\npipeline: run-packer: image: fpfis/packer  "
},
{
	"uri": "https://docs.fpfis.eu/",
	"title": "FPFIS documentation",
	"tags": [],
	"description": "",
	"content": " Introduction This space is a placeholder for all documentation about FPFIS\u0026rsquo;s OpenSource projects.\nPHP SDKs Multiple PHP SDKs are provided for various clients.\nDocker images Docker images are also provided for other tasks, eg, an nginx web server, a Composer Docker image\n"
},
{
	"uri": "https://docs.fpfis.eu/drone/drone-plugins/phar-composer/",
	"title": "PHAR Composer",
	"tags": ["composer", "phar"],
	"description": "",
	"content": " This plugins allows for creating a standalone PHAR file from a composer project.\nOperation The plugin will :\n Move away your current vendor, .git and .drone.yml file Do a composer install --no-dev to get a minimal build Build a PHAR file Restore your vendor, .git and .drone.yml file  Example pipeline: build-phar: image: phpdrone/phar-composer output: ghcli.phar  Result Backing up vendor directory ... Moving away non-dist material ... Installing mininal components ... Loading composer repositories with package information Installing dependencies from lock file Package operations: 0 installs, 0 updates, 10 removals - Removing squizlabs/php_codesniffer (3.1.1) - Removing clue/phar-composer (v1.0.0) - Removing herrera-io/box (1.6.1) - Removing phine/path (1.1.0) - Removing phine/exception (1.0.0) - Removing tedivm/jshrink (v1.2.0) - Removing knplabs/packagist-api (v1.5.0) - Removing doctrine/inflector (v1.2.0) - Removing symfony/finder (v2.8.28) - Removing symfony/process (v2.8.28) Generating autoload files Building PHAR file ... [1/1] Creating phar ghcli.phar - Adding main package Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/\u0026quot; - Adding composer base files - Adding dependency \u0026quot;clue/stream-filter\u0026quot; from \u0026quot;vendor/clue/stream-filter/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/clue/stream-filter/\u0026quot; - Adding dependency \u0026quot;guzzlehttp/guzzle\u0026quot; from \u0026quot;vendor/guzzlehttp/guzzle/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/guzzlehttp/guzzle/\u0026quot; - Adding dependency \u0026quot;guzzlehttp/promises\u0026quot; from \u0026quot;vendor/guzzlehttp/promises/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/guzzlehttp/promises/\u0026quot; - Adding dependency \u0026quot;guzzlehttp/psr7\u0026quot; from \u0026quot;vendor/guzzlehttp/psr7/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/guzzlehttp/psr7/\u0026quot; - Adding dependency \u0026quot;knplabs/github-api\u0026quot; from \u0026quot;vendor/knplabs/github-api/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/knplabs/github-api/\u0026quot; - Adding dependency \u0026quot;php-http/cache-plugin\u0026quot; from \u0026quot;vendor/php-http/cache-plugin/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/cache-plugin/\u0026quot; - Adding dependency \u0026quot;php-http/client-common\u0026quot; from \u0026quot;vendor/php-http/client-common/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/client-common/\u0026quot; - Adding dependency \u0026quot;php-http/discovery\u0026quot; from \u0026quot;vendor/php-http/discovery/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/discovery/\u0026quot; - Adding dependency \u0026quot;php-http/guzzle6-adapter\u0026quot; from \u0026quot;vendor/php-http/guzzle6-adapter/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/guzzle6-adapter/\u0026quot; - Adding dependency \u0026quot;php-http/httplug\u0026quot; from \u0026quot;vendor/php-http/httplug/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/httplug/\u0026quot; - Adding dependency \u0026quot;php-http/message\u0026quot; from \u0026quot;vendor/php-http/message/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/message/\u0026quot; - Adding dependency \u0026quot;php-http/message-factory\u0026quot; from \u0026quot;vendor/php-http/message-factory/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/message-factory/\u0026quot; - Adding dependency \u0026quot;php-http/promise\u0026quot; from \u0026quot;vendor/php-http/promise/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/php-http/promise/\u0026quot; - Adding dependency \u0026quot;psr/cache\u0026quot; from \u0026quot;vendor/psr/cache/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/psr/cache/\u0026quot; - Adding dependency \u0026quot;psr/http-message\u0026quot; from \u0026quot;vendor/psr/http-message/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/psr/http-message/\u0026quot; - Adding dependency \u0026quot;psr/log\u0026quot; from \u0026quot;vendor/psr/log/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/psr/log/\u0026quot; - Adding dependency \u0026quot;symfony/console\u0026quot; from \u0026quot;vendor/symfony/console/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/symfony/console/\u0026quot; - Adding dependency \u0026quot;symfony/debug\u0026quot; from \u0026quot;vendor/symfony/debug/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/symfony/debug/\u0026quot; - Adding dependency \u0026quot;symfony/options-resolver\u0026quot; from \u0026quot;vendor/symfony/options-resolver/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/symfony/options-resolver/\u0026quot; - Adding dependency \u0026quot;symfony/polyfill-mbstring\u0026quot; from \u0026quot;vendor/symfony/polyfill-mbstring/\u0026quot; Adding whole project directory \u0026quot;/drone/src/github.com/gboddin/php-github-cli/vendor/symfony/polyfill-mbstring/\u0026quot; - Setting main/stub Using referenced shebang \u0026quot;#!/usr/bin/env php\u0026quot; Using referenced chmod 0755 Applying chmod 0755 OK - Creating ghcli.phar (2537.2 KiB) completed after 33.4s Restoring state ...  Limitation You should clean your workspace before building, at the risk of finding non-dist material in the final PHAR file.\nCredits The plugin is based around PHAR-Composer by Clue.\n"
},
{
	"uri": "https://docs.fpfis.eu/docker-images/php/",
	"title": "PHP",
	"tags": [],
	"description": "",
	"content": " Introduction For production\u0026rsquo;s matching sake, the current FPFIS\u0026rsquo;s Docker images are based on CentOS 6.\nTwo version are currently supported : fpfis/php56 and fpfis/php71.\nFor more informations, consult the following topics :\n Flavors   Configuration   Shellinabox   About file permissions : The server will use the UID and GID of the ${DOCUMENT_ROOT} directory to run.\n Image size : Since the images are based on CentOS 6, the images can be quite big.\n "
},
{
	"uri": "https://docs.fpfis.eu/drone/php-sdks/",
	"title": "PHP SDKs",
	"tags": [],
	"description": "",
	"content": " There are 2 SDKs availalbe to interact with Drone :\nPlugin SDK The plugins SDK allows for easy creation of PHP based plugins.\n$build = new \\DronePluginSdk\\Build();  Client SDK The client SDK allows for interactions with Drone server.\nThe client SDK is currently unstested an a work in progress\n $api_instance = new DroneClient\\Api\\BuildsApi();  "
},
{
	"uri": "https://docs.fpfis.eu/drone/drone-plugins/packer/",
	"title": "Packer",
	"tags": [],
	"description": "",
	"content": " Description Packer is a tool by Hashicorp to automatically build machine images.\nIt supports Docker, Virtualbox, AWS EC2 and many more.\nImage Image is named fpfis/packer and based on Alpine.\nConfiguration No configuration is available for this image.\nExamples From CLI docker run -v $(pwd):$(pwd) -w $(pwd) -ti --rm fpfis/packer  From Drone pipeline: run-packer: image: fpfis/packer   \n"
},
{
	"uri": "https://docs.fpfis.eu/tags/phar/",
	"title": "Phar",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/docker-images/redis/",
	"title": "Redis",
	"tags": [],
	"description": "",
	"content": " Image Image is named fpfis/redis and based on CentOS 6.\nConfiguration No configuration is available for this image.\nPort Redis is running on port 6379 by default.\nExample docker run -p 6379:6379 -ti --rm fpfis/redis   \n"
},
{
	"uri": "https://docs.fpfis.eu/tags/security/",
	"title": "Security",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/docker-images/php/shellinabox/",
	"title": "Shellinabox",
	"tags": [],
	"description": "",
	"content": " Usage When running an fpfis/php*-dev-* you can access a shell from http://localhost:8080/shell/ .\n"
},
{
	"uri": "https://docs.fpfis.eu/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/drone/tutorials/",
	"title": "Tutorials",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/docker-images/varnish/",
	"title": "Varnish",
	"tags": [],
	"description": "",
	"content": " Image Image is named fpfis/varnish and based on CentOS 6.\nConfiguration Use the following environment variable to configure the image :\nHTTP_PORT Port to listen to ( default 6080 )\nDEFAULT_BACKEND Backend to connect to ( default localhost:8080 )\nMouting VCL volume VCL must be mounted in /etc/varnish and a default.vcl should be present.\nExample Assuming you have a working VCL with default.vcl in your local varnish folder :\ndocker run -p 6080:6080 -ti --rm -e DEFAULT_BACKEND=172.16.10.1:8080 -v $(pwd)/varnish:/etc/varnish fpfis/varnish   \n"
},
{
	"uri": "https://docs.fpfis.eu/php-sdks/itopapi/",
	"title": "iTopApi",
	"tags": [],
	"description": "",
	"content": " iTopApi PHP is an helper class to use and query the iTop API from your PHP scripts.\nUsage API documentation See the generated documentation.\nInstallation composer require ec-europa/itopapi  Examples Getting data require 'vendor/autoload.php'; $iTopAPI = new \\iTopApi\\ITopClient( 'http://localhost/itop', 'itopUser', 'iTopPassword' ); //disable SSL checks ? //$iTopAPI-\u0026gt;setCertificateCheck(false); $query = sprintf(\u0026quot;SELECT Servers WHERE environment = '%s'\u0026quot;,'development'); $serversRequest = $iTopAPI-\u0026gt;coreGet(\u0026quot;Servers\u0026quot;,$query); $servers = $serverRequest['objects'];  Creating data require 'vendor/autoload.php'; $iTopAPI = new \\iTopApi\\ITopClient( 'http://localhost/itop', 'itopUser', 'iTopPassword' ); //disable SSL checks ? //$iTopAPI-\u0026gt;setCertificateCheck(false); $request = $iTopAPI-\u0026gt;coreCreate(\u0026quot;Servers\u0026quot;,array( 'hostname' =\u0026gt; 'localhost', 'memory' =\u0026gt; 2048, 'cpu' =\u0026gt; 4, 'location' =\u0026gt; 'dc1' ));  Updating data require 'vendor/autoload.php'; $iTopAPI = new \\iTopApi\\ITopClient( 'http://localhost/itop', 'itopUser', 'iTopPassword' ); //disable SSL checks ? //$iTopAPI-\u0026gt;setCertificateCheck(false); $request = $iTopAPI-\u0026gt;coreUpdate(\u0026quot;Servers\u0026quot;,array( 'hostname' =\u0026gt; 'localhost' ),array( 'memory' =\u0026gt; 1024 ));  Using object oriented require 'vendor/autoload.php'; $iTopAPI = new \\iTopApi\\ITopClient( 'http://localhost/itop', 'itopUser', 'iTopPassword' ); //disable SSL checks ? //$iTopAPI-\u0026gt;setCertificateCheck(false); /** * Query and iterate */ $servers = $iTopAPI-\u0026gt;getObjects(\u0026quot;Server\u0026quot;, array( 'name' =\u0026gt; 'server001' ) ); foreach($servers as $server) { echo $server-\u0026gt;name.' is '.$server-\u0026gt;status_friendlyname; $server-\u0026gt;name = 'server001-eu'; $server-\u0026gt;save(); } /** * Deletes a new server : */ if($server-\u0026gt;status_friendlyname == 'decommissioning') $server-\u0026gt;delete(); /** * Creates a new server : */ $server = $iTopClient-\u0026gt;getNewObject('Server'); $server-\u0026gt;name = 'server002'; $server-\u0026gt;status_friendlyname = 'deployed'; $server-\u0026gt;save();  \n"
},
{
	"uri": "https://docs.fpfis.eu/drone/drone-plugins/phpdoc/",
	"title": "phpDoc",
	"tags": ["composer", "documentation"],
	"description": "",
	"content": " This plugins allows for generating phpDocumentator site based on phpdoc.xml\nExample pipeline: build-phar: image: phpdrone/phpdoc:2.8  Result Collecting files .. OK Initializing parser .. OK Parsing files Parsing /drone/src/github.com/phpdrone/drone-plugin-sdk/src/Repo.php No summary was found for this file No summary for method getOwner() No summary for method getName() No summary for method getLink() No summary for method getDefaultBranch() No summary for method isPrivate() No summary for method isTrusted() Parsing /drone/src/github.com/phpdrone/drone-plugin-sdk/src/Commit.php No summary was found for this file No summary for method getBranch() No summary for method getTag() No summary for method getSha() No summary for method getMessage() No summary for method getAuthorName() No summary for method getAuthorEmail() No summary for method getRef() Parsing /drone/src/github.com/phpdrone/drone-plugin-sdk/src/Build.php Warning: count(): Parameter must be an array or an object that implements Countable in /root/.composer/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Plugin/Core/Descriptor/Validator/Constraints/Functions/IsArgumentInDocBlockValidator.php on line 33 Warning: count(): Parameter must be an array or an object that implements Countable in /root/.composer/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Plugin/Core/Descriptor/Validator/Constraints/Functions/IsArgumentInDocBlockValidator.php on line 33 Warning: count(): Parameter must be an array or an object that implements Countable in /root/.composer/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Plugin/Core/Descriptor/Validator/Constraints/Functions/IsArgumentInDocBlockValidator.php on line 33 Warning: count(): Parameter must be an array or an object that implements Countable in /root/.composer/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Plugin/Core/Descriptor/Validator/Constraints/Functions/IsArgumentInDocBlockValidator.php on line 33 No summary was found for this file Storing cache in \u0026quot;/drone/src/github.com/phpdrone/drone-plugin-sdk/doc\u0026quot; .. OK Load cache .. 0.008s Preparing template \u0026quot;clean\u0026quot; .. 0.017s Preparing 17 transformations .. 0.000s Build \u0026quot;elements\u0026quot; index .. 0.000s Replace textual FQCNs with object aliases .. 0.002s Resolve @link and @see tags in descriptions .. 0.001s Enriches inline example tags with their sources .. 0.000s Build \u0026quot;packages\u0026quot; index .. 0.002s Build \u0026quot;namespaces\u0026quot; index and add namespaces to \u0026quot;elements\u0026quot; .. 0.000s Collect all markers embedded in tags .. 0.000s Transform analyzed project into artifacts .. Applying 17 transformations Initialize writer \u0026quot;phpDocumentor\\Plugin\\Core\\Transformer\\Writer\\FileIo\u0026quot; Initialize writer \u0026quot;phpDocumentor\\Plugin\\Twig\\Writer\\Twig\u0026quot; Initialize writer \u0026quot;phpDocumentor\\Plugin\\Graphs\\Writer\\Graph\u0026quot; Execute transformation using writer \u0026quot;FileIo\u0026quot; Execute transformation using writer \u0026quot;FileIo\u0026quot; Execute transformation using writer \u0026quot;FileIo\u0026quot; Execute transformation using writer \u0026quot;FileIo\u0026quot; Execute transformation using writer \u0026quot;FileIo\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;twig\u0026quot; Execute transformation using writer \u0026quot;Graph\u0026quot; 0.633s Analyze results and write report to log .. 0.001s  Credits The plugin is based around phpDocumentator.\n"
}]